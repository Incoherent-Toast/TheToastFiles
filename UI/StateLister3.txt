var MaxListLength = 5

/*///////////////////////////////////
StateLister v4

This is a simple script that will list the last 5 previous enemy states and times.
You can adjust the number of states that are retained with the variable above.

 - Incoherent Toast
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

var StateList = []
var StateListText
var StateListBox
var init = true
var Mobile = sys.isMobile
var Defense = 0
var PHealth = hp
var EventRecorder = []
var EventDisplayText
var DebuffCount = 0
var FoeBuffCount = 0

?totaltime = 1 | init
  init = false
  EventRecorder.Clear()
  StateListBox = ui.AddPanel()
  StateListBox.w = 9
  StateListBox.y = 2
  StateListBox.h = 2+MaxListLength
  StateListBox.x = 5 - screen.w/2

  StateListText = ui.AddText("Foe:\n State##Time\n")
  StateListText.w = 99
  StateListText.align = center
  StateListText.y = -2

  EventDisplayText = ui.AddText()
  EventDisplayText.w = 99
  EventDisplayText.x = 44
  EventDisplayText.align = left
  EventDisplayText.y = 1+ MaxListLength

  StateListBox.Add(StateListText)
  StateListBox.Add(EventDisplayText)

func CheckDamage()
  ?hp + armor + armor.f/10.0 + 0.5 < Defense
    EventRecorder.Add(["Hit at: ",foe.state,foe.time,totaltime])
    UpdateEventDisplay()
  Defense = hp + armor + armor.f/10.0
CheckDamage()

func CheckHealing()
  ?hp > PHealth
    EventRecorder.Add(["Healed " + (hp-PHealth) + " hp at: ",foe.state,foe.time,totaltime])
    UpdateEventDisplay()
  PHealth = hp
CheckHealing()

func CheckDebuffs()
  ?debuffs.count > DebuffCount
    EventRecorder.Add(["Received debuff at: ",foe.state,foe.time,totaltime])
    UpdateEventDisplay()
  DebuffCount = debuffs.count
CheckDebuffs()

func CheckFoeBuffs()
  ?foe.buffs.count > FoeBuffCount
    EventRecorder.Add(["Foe received buff at: ",foe.state,foe.time,totaltime])
    UpdateEventDisplay()
  FoeBuffCount = foe.buffs.count
CheckFoeBuffs()

var TempText
func UpdateText()
  TempText = "Foe:\n State##Time\n"
  for i : StateList
    TempText = TempText + i[0] + "," +i[1] + "\n"
  StateListText.text = TempText

func UpdateEventDisplay()
  TempText = ""
  for a : EventRecorder
    TempText = TempText + a[0] + a[1] + ":" + a[2] + "\n"
  EventDisplayText.text = TempText

func CheckEventTimers()
  ?EventRecorder[0][3] + 50 < totaltime
    EventRecorder.RemoveAt(0)
    UpdateEventDisplay()

?StateList.Count()
  ?foe.state ! StateList[0][0]
    StateList.Insert(0,[foe.state,foe.time])
    UpdateText()
  :?foe.time ! StateList[0][1]
    StateList[0].Emplace(1,foe.time)
    UpdateText()
  ?StateList.Count() > MaxListLength
    StateList.RemoveAt(MaxListLength)
    UpdateText()
:?foe.distance < 30
  StateList.Add([foe.state,foe.time])
  UpdateText()

?EventRecorder.Count()
  CheckEventTimers()