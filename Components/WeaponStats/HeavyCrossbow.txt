
var Damage = [2,4,6,9,12,15,17,20,22,25,27,32,36,41,46,50,55,60,64,69,74,78,83,87,92,97,101,106,111,115,120,125]
var Crit_Chance = [8,10.5,13,15.5,18,20.5,23,25.5,28,30.5,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75]
var Crit_Mult   = [3,3.3,3.6,3.9,4.2,4.5,4.8,5.1,5.4,5.7,6,6.6,7.1,7.7,8.3,8.9,9.4,10,10.6,11.1,11.7,12.3,12.8,13.4,14,14.6,15.1,15.7,16.3,16.8,17.4,18]
var AS_Reduction = [0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,22,25,28,31,34,37]

var Base_AS = [16,6,5]


var WeaponArt = ascii



#╤══}
asciiend

func ReturnWeaponArt(Element)
  return WeaponArt

func ReturnEnchTypeList(Affix)
  return EnchTypeList

var EnchTypeList = ["0- Damage         ","1- Attack Speed   ","2- Dual Crit      ","3- Dual Crit      "]






/*
Heavy Xbow:
  0 = dmg
  1 = AS
  2,3 = crit
*/

func DisplayStats(Affix,ElePointer,Star,EnchantLevel,EnchTypePointer,f)
  var BasePointer = [Star,0,Star,Star]
  ?EnchTypePointer > 1
    BasePointer[2] += EnchantLevel
    BasePointer[3] += EnchantLevel
  :
    BasePointer[EnchTypePointer] += EnchantLevel
  var AS_List = f.GetAS(Base_AS, AS_Reduction[BasePointer[1]])
  var AS = AS_List[0] + AS_List[1] + AS_List[2]
  var Dps = f.CalcDPS(Damage[BasePointer[0]], 0, AS, Crit_Chance[BasePointer[2]], Crit_Mult[BasePointer[3]], 1)

  var DPS_String = string.Format("
^Damage: {0}\n
^Attack Frames: {1}\n
^{2}% chance to crit for {3}x damage\n
^\nDPS: {4}",
^Damage[BasePointer[0]], AS , Crit_Chance[BasePointer[2]], Crit_Mult[BasePointer[3]], Dps)

  return DPS_String