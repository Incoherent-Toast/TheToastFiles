


var Damage = [6,13,19,25,32,38,44,50,57,63,69,73,77,80,84,87,91,95,98,102,105,109,113,116,120,123,127,131,134,138,141,145]
var Armour_Damage_Mult = [2,2.1,2.2,2.2,2.3,2.4,2.5,2.6,2.6,2.7,2.8,3,3.1,3.3,3.4,3.6,3.8,3.9,4.1,4.2,4.4,4.6,4.7,4.9,5,5.2,5.4,5.5,5.7,5.8,6,6.2]
var AS_Reduction = [0,3,6,6,8,8,8,9,9,9,9,10,10,10,10,10,11,11,11,11,12,12]
var Armor_Fatigue_Duration = [1.5,1.75,2,2.25,2.5,2.75,3,3.25,3.5,3.75,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]

var Base_AS = [14,11,5]

var WeaponArt = ascii
#___#
[___]
##║
##║
##║
asciiend

func ReturnWeaponArt(Element)
  return WeaponArt


func ReturnEnchTypeList(Affix)
  return EnchTypeList

var EnchTypeList = ["0- Damage         ","1- Bonus Health   ","2- Attack Speed   ","3- Stun Duration  ","4- Armour Damage  ","5- Fatigue Strength","6- Fatigue Duration"]


/*
heavy_hammer:
  0 = Dmg
  1 = health
  2 = AS
  3 = Stun Duration
  4 = Armour Mult
  5 = Fatigue %
  6 = Debuff Duration
*/

func DisplayStats(Affix,ElePointer,Star,EnchantLevel,EnchTypePointer,f)
  var BasePointer = [Star,0,0,Star,Star,Star,Star]
  BasePointer[EnchTypePointer] += EnchantLevel

  var AS_List = f.GetAS(Base_AS, AS_Reduction[BasePointer[2]])
  var AS = AS_List[0] + AS_List[1] + AS_List[2]
  var Dps = f.CalcDPS(Damage[BasePointer[0]], 0, AS, 0, 1, 1)
  var DpsArmour = Dps * Armour_Damage_Mult[BasePointer[4]]

  var DPS_String = string.Format("
^Damage: {0} x{1} vs Armour\n
^Attack Frames: {2}\n
^\nDPS: {3} ({4})",
^Damage[BasePointer[0]], Armour_Damage_Mult[BasePointer[4]] , AS , Dps, DpsArmour)

  return DPS_String