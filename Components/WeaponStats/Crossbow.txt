


var Damage = [2,3,4,5,7,8,10,11,13,14,16,17,19,20,22,23,25,26,28,29,31,32,34,35,37,38,40,41,43,44,46,47]
var Crit_Chance = [7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69]
var Crit_Mult   = [2,2.2,2.4,2.6,2.8,3,3.2,3.4,3.6,3.8,4,4.2,4.4,4.7,4.9,5.1,5.3,5.5,5.8,6,6.2,6.4,6.6,6.9,7.1,7.3,7.5,7.7,8,8.2,8.4,8.6]

var AS_Reduction = [0,1,2,3,4,4,5,6,7,8,8,9,10,11,12,12,13,14,15,16,17,17,18,19,20,21,21,22,23,24,25,25]

var Base_AS = [12,8,10]

var WeaponArt = ascii



##═}
asciiend

func ReturnWeaponArt(Element)
  return WeaponArt

func ReturnEnchTypeList(Affix)
  return EnchTypeList

var EnchTypeList = ["0- Damage         ","1- Attack Speed   ","2- Dual Crit      ","3- Dual Crit      "]


/*
Crossbow
  0 - Dmg
  1 - AS
  2 - Crit
  3 - crit
*/

func DisplayStats(Affix,ElePointer,Star,EnchantLevel,EnchTypePointer,f)
  var BasePointer = [Star,Star,Star,Star]
  ?EnchTypePointer > 1
    BasePointer[2] += EnchantLevel
    BasePointer[3] += EnchantLevel
  :
    BasePointer[EnchTypePointer] += EnchantLevel
  var AS_List = f.GetAS(Base_AS, AS_Reduction[BasePointer[1]])
  var AS = AS_List[0] + AS_List[1] + AS_List[2]
  var Dps = f.CalcDPS(Damage[BasePointer[0]], 0, AS, Crit_Chance[BasePointer[2]], Crit_Mult[BasePointer[3]], 1)

  var DPS_String = string.Format("
^Damage: {0}\n
^Attack Frames: {1}\n
^{2}% chance to crit for {3}x damage\n
^\nDPS: {4}",
^Damage[BasePointer[0]], AS , Crit_Chance[BasePointer[2]], Crit_Mult[BasePointer[3]], Dps)

  return DPS_String