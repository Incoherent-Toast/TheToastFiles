var angle
var value
var value1 = 10
var depth = 100

func factorial(number)
  ?number <= 1
    return 1
  value = number
  for a = number-1..2
    value = value * a
  return value

func power(number,number2)
  ?number2 = 0
    return 1
  value = 1
  for a = 1..number2
    value = value * number
  ?number2 > 0
    return value
  :
    return "I can't return a decimal"

func BigNumber(number, a)
  value = 0
  ?a <= 2
    return (depth*power(number*94,a)) / (power(5400,a)*factorial(a))
  value2= 2
  for b = 1..a/2+1
    ?value2<=a
      value = value + (depth*power(number*94,2)) / (power(5400,2)*factorial(2))
      ?a-value2 >= 2
        value2 = value2 + 2
      :?a-value2 >= 0
        value2 ++
    return value

func sin(number)
  value = 0
  for a = 1..11
    ?a%2!0
      value = value + power(-1,(((a-1)/2)%2)) * BigNumber(number,a)
  return value


?key = upBegin
  value1 = value1 * 10

var value3 = sin(180)

>o0,0,@value1@
>o0,1,@value2@